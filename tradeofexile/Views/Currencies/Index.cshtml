@model tradeofexile.Models.CurrenciesViewModel;
<body onload="hideNoDataOffers()">
    <table class="item-overview">
        <thead class="">
            <tr>

                <th>

                </th>
                <th class="th-name">
                    Name
                </th>
                <th class="th-buy" colspan="5">
                    Buy
                </th>
                <th class="th-sell" colspan="5">
                    Get
                </th>


            </tr>
        </thead>
        <tbody class="item-overview-tbody">
            @foreach (var offer in Model.ExchangeOffers)
            {
                <tr class="item-tr">
                    <td>
                        <img src="@offer.IconLink" />
                    </td>
                    <td>
                        @offer.CurrencyType.ToString()
                    </td>


                    @* buy *@
                    <td class="buy-from-rate">
                        @offer.BuyRate
                    </td>

                    <td class="buy-icon">
                        <img src="@offer.BuyIconLink" />
                    </td>

                    <td class="buy-leads-to">
                        --->
                    </td>

                    <td class="buy-to-rate">
                        1.0
                    </td>

                    <td class="buy-target-icon">
                        <img src="@offer.IconLink" />
                    </td>

                    @* sell *@
                    <td class="sell-from-rate">
                         1.0
                    </td>
                    <td class="sell-icon">
                        <img src="@offer.IconLink" />
                    </td>
                    <td class="sell-leads-to">
                        --->
                    </td>
                    <td class="sell-to-rate">
                         @offer.SellRate
                    </td>
                    <td class="sell-target-icon">
                        <img src="@offer.SellIconLink" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="load-more-container">
        @Html.ActionLink("Load more", "Index", "Currencies", new { page = Model.PagingInfo.CurrentPage + 1 })
    </div>
</body>

<script>
    //yes, I know its not elegant
    function hideNoDataOffers() {
        
        var buyFromRates = document.getElementsByClassName("buy-from-rate");
        var buyIcons = document.getElementsByClassName("buy-icon");
        var buyLeadsTo = document.getElementsByClassName("buy-leads-to");
        var buyToRates = document.getElementsByClassName("buy-to-rate");
        var buyTargetIcons = document.getElementsByClassName("buy-target-icon");
        var sellFromRates = document.getElementsByClassName("sell-from-rate");
        var sellIcons = document.getElementsByClassName("sell-icon");
        var sellLeadsTo = document.getElementsByClassName("sell-leads-to");
        var sellToRates = document.getElementsByClassName("sell-to-rate");
        var sellTargetIcons = document.getElementsByClassName("sell-target-icon");

        for (var i = 0; i < buyFromRates.length; i++) {
            if (buyFromRates[i].innerHTML == 0) {
                buyFromRates[i].innerHTML = null;
                buyIcons[i].innerHTML = null;
                buyLeadsTo[i].innerHTML = "no data";
                buyToRates[i].innerHTML = null;
                buyTargetIcons[i].innerHTML = null;
            }
            if (sellToRates[i].innerHTML == 0) {
                sellFromRates[i].innerHTML = null;
                sellIcons[i].innerHTML = null;
                sellLeadsTo[i].innerHTML = "no data";
                sellToRates[i].innerHTML = null;
                sellTargetIcons[i].innerHTML = null;
            }
        }
    }
</script>
